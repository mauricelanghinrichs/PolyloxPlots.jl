var documenterSearchIndex = {"docs":
[{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"CurrentModule = PolyloxPlots","category":"page"},{"location":"#PolyloxPlots.jl","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"","category":"section"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"Plotting methods for Polylox / barcoding data.","category":"page"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"","category":"page"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"Heatmap","category":"page"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"plxheatmap","category":"page"},{"location":"#PolyloxPlots.plxheatmap","page":"PolyloxPlots.jl","title":"PolyloxPlots.plxheatmap","text":"plxheatmap(df; <keyword arguments>)\n\nCreates a heatmap of barcode clone sizes for all celltypes in the dataframe (second to last column).\n\nCelltypes are reordered based on a hierarchical clustering with Kendall rank correlation. Barcodes are ordered in groups of same fate combinations, and within these groups via the sum of counts over all celltypes.\n\nArguments\n\ndf::DataFrame: a barcode dataframe, first column (:Barcode) contains barcodes, while all further columns contain barcode reads / cell counts of the celltypes.\nvaltransform = x -> x==zero(x) ? -1 : log(x): function that transforms barcode read / cell count values (transformed values used for the colorbar).\nresolution = (200,250): figure resolution / size.\n\nExamples\n\njulia> using DataFrames, PolyloxPlots;\njulia> df = DataFrame(:Barcode => 1:10, \n                        :A => [10,0,0,1,3,5,3,1,2,5],\n                        :B => [1,8,4,0,0,0,0,3,2,1],\n                        :C => [10,0,1,1,5,5,7,1,0,5])\njulia> fig, ax, hm = plxheatmap(df)\njulia> fig # display figure\njulia> save(\"plxheatmap.pdf\", fig)\n\n\n\n\n\n","category":"function"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"Bubble plot","category":"page"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"plxbubble","category":"page"},{"location":"#PolyloxPlots.plxbubble","page":"PolyloxPlots.jl","title":"PolyloxPlots.plxbubble","text":"plxbubble(df; <keyword arguments>)\n\nCreates a bubble chart of fate contributions to all individual celltypes in the dataframe (second to last column).\n\nContributions are computed from the fraction of reads / cell counts into a given celltype, and visualised via markersize and color. \n\nArguments\n\ndf::DataFrame: a barcode dataframe, first column (:Barcode) contains barcodes, while all further columns contain barcode reads / cell counts of the celltypes.\ncelltypenames = nothing: short labels for the celltypes on the y axis; if not specified, the first letter of each celltype will be used (default).\nnallfates::Int = 6: the maximum number of celltypes for which all fate combinations are computed; for celltype numbers above, only existing fates in the data will be shown.\nresolution = (300,450): figure resolution / size.\n\nExamples\n\njulia> using DataFrames, PolyloxPlots;\njulia> df = DataFrame(:Barcode => 1:6,\n                    :Aaa => [1,0,0,0,1,0],\n                    :Bbb => [0,0.5,0.5,0,1,2],\n                    :Ccc => [0,0,0,1,1,2])\njulia> fig, ax, sc = plxbubble(df)\njulia> fig # display figure\njulia> save(\"plxbubble.pdf\", fig)\n\n\n\n\n\n","category":"function"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"Index","category":"page"},{"location":"","page":"PolyloxPlots.jl","title":"PolyloxPlots.jl","text":"","category":"page"}]
}
